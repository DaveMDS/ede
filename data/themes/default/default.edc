/*
 *  Elif - EFL File Manager
 *
 *  Copyright (C) 2010 Davide Andreoli <dave@gurumeditation.it>
 *
 *  License LGPL-2.1, see COPYING file at project folder.
 *
 */

#define COMP LOSSY 80

//~ #define FONT_COLOR_1 200 200 200 255
#define UI_FONT "Sans"
#define UI_FONT_BOLD "Sans:style=Bold"
#define MENU_FONT "Sans"

images {
   image: "layout.png" COMP;
   image: "checkboard.png" COMP;
   //~ image: "tower_normal_base.png" COMP;
   //~ image: "tower_normal_rotate.png" COMP;
   image: "tower_normal_icon.png" COMP;
   image: "tower_ghost_icon.png" COMP;
   image: "overlay_0.png" COMP;
   image: "overlay_1.png" COMP;
   image: "overlay_2.png" COMP;
   image: "overlay_3.png" COMP;
   image: "overlay_4.png" COMP;
   image: "overlay_5.png" COMP;
   image: "overlay_6.png" COMP;
   image: "overlay_7.png" COMP;
   image: "overlay_red.png" COMP;
   image: "overlay_green.png" COMP;
   image: "overlay_blue.png" COMP;
   image: "overlay_wall.png" COMP;
   image: "icon_lives.png" COMP;
   image: "icon_bucks.png" COMP;
   image: "icon_score.png" COMP;

}

fonts {
   //~ font:"content.ttf" "content";
}

data {
   //~ item: "ede/theme/name" "Default";
   //~ item: "ede/theme/desc" "The ede default theme";
   //~ item: "ede/theme/version" "1"; // This must match the ede version of themes
}

styles {
   style { name: "ede_style";
      base: "font=Sans font_size=10 align=left color=#FFF wrap=word";
      tag:  "br" "\n";
      //~ tag:  "hilight" "+ font_size=18 font=content_bd color=#A0D026";
      tag:  "b" "+ font=Sans:style=Bold";
      //~ tag:  "tab" "\t";
      //~ tag:  "c" "+ align=center font_size=24 font=content_bd color=#A0D026A0 color2=#A0D026A0 style=GLOW";
      tag:  "h3" "+ align=center font_size=12 color=#CCC style=soft_shadow shadow_color=#0000003f";
   }
   style { name: "ede_menu_style";
      base: "font=Sans font_size=12 align=right color=#FFF";
      tag:  "br" "\n";
      tag:  "b" "+ font=Sans:style=Bold";
   }
}

collections {

/******************************************************************************/
   group { name: "ede/layout";
      parts {
         /* background  */
         part { name: "bg";
            type: IMAGE;
            mouse_events:  0;
            description { state: "default" 0.0;
               image.normal: "layout.png";
               image.border: 180 10 60 60;
            }
         }

         /* a button for debug */
         part { name: "a button";
            type: RECT;
            mouse_events:  1;
            description { state: "default" 0.0;
               color: 0 0 200 200;
               max: 30 30;
               min: 30 30;
               align: 0.95 0.03;
            }
         }

         /* menu button */
         part { name: "menu_button";
            type: RECT;
            mouse_events:  1;
            description { state: "default" 0.0;
               color: 200 0 200 200;
               max: 30 30;
               min: 30 30;
               align: 0.85 0.03;
            }
         }
         part { name: "menu_button_text";
            type: TEXT;
            mouse_events:  0;
            description { state: "default" 0.0;
               rel1.to: "menu_button";
               rel2.to: "menu_button";
               text {
                  text: "menu";
                  font: UI_FONT;
                  size: 8;
               }
            }
         }

         /* lives icon + text */
         part { name: "lives.icon";
            type: IMAGE;
            mouse_events:  0;
            description { state: "default" 0.0;
               max: 15 15;
               min: 15 15;
               align: 0.0 0.0;
               rel1.offset: 15 20;
               image.normal: "icon_lives.png";
            }
         }
         part { name: "lives.icon.text";
            type: TEXT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 200 10 10 255;

               max: 30 15;
               min: 30 15;
               align: 0.0 0.0;
               rel1.to: "lives.icon";
               rel1.relative: 1.0 0.0;
               rel2.to: "lives.icon";
               rel2.relative: 1.0 1.0;
               text {
                  text: "20";
                  font: "Sans:style=Bold";
                  size: 14;
                  align: 0.0 0.5;
               }

            }
         }

         /* bucks icon + text */
         part { name: "bucks.icon";
            type: IMAGE;
            mouse_events:  0;
            description { state: "default" 0.0;
               max: 15 15;
               min: 15 15;
               align: 0.0 0.0;
               rel1.offset: 60 20;
               image.normal: "icon_bucks.png";
            }
         }
         part { name: "bucks.icon.text";
            type: TEXT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 200 160 25 255;
               max: 150 15;
               min: 150 15;
               align: 0.0 0.0;
               rel1.to: "bucks.icon";
               rel1.relative: 1.0 0.0;
               rel2.to: "bucks.icon";
               rel2.relative: 1.0 1.0;
               text {
                  align: 0.0 0.5;
                  text: "0";
                  font: "Sans:style=Bold";
                  size: 14;
               }

            }
         }

         /* score icon + text */
         part { name: "score.icon";
            type: IMAGE;
            mouse_events:  0;
            description { state: "default" 0.0;
               max: 15 15;
               min: 15 15;
               align: 0.0 0.0;
               rel1.offset: 15 40;
               image.normal: "icon_score.png";
            }
         }
         part { name: "score.icon.text";
            type: TEXT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 224 152 88 255;
               max: 150 15;
               min: 150 15;
               align: 0.0 0.0;
               rel1.to: "score.icon";
               rel1.relative: 1.0 0.0;
               rel2.to: "score.icon";
               rel2.relative: 1.0 1.0;
               text {
                  align: 0.0 0.5;
                  text: "0";
                  font: "Sans:style=Bold";
                  size: 14;
               }

            }
         }

         /* tower buttons box */
         part { name: "towers_btn_box";
            type: BOX;
            mouse_events:  1;
            description { state: "default" 0.0;
               max: 400 30;
               align: 0.0 0.0;
               rel1.offset: 200 15;
               box {
                  layout: "horizontal";
                  padding: 4 0;
                  align: 0.0 0.5;
                  min: 0 0;
                }
            }
         }

         /* side bar (tower info) */
         part { name: "side_bar";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 200 0 200 0;
               rel1.offset: 12 65;
               rel2.relative: 0.0 1.0;
               rel2.offset: 168 -65;
            }
         }
         part { name: "tower.name";
            type: TEXT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 200 200 200 255;
               max: 200 15;
               align: 0.0 0.0;
               rel1.offset: 10 0;
               rel1.to: "side_bar";
               rel2.to: "side_bar";
               text {
                  text: "";
                  font: UI_FONT_BOLD;
                  size: 12;
                  align: 0.0 0.0;

               }
            }
         }
         part { name: "tower.icon.swallow";
            type: SWALLOW;
            mouse_events:  0;
            description { state: "default" 0.0;
               min: 30 30;
               max: 30 30;
               align: 0.0 0.0;
               rel1.offset: 10 20;
               rel1.to: "side_bar";
               rel2.to: "side_bar";
               visible: 1;
            }
         }
         part { name: "tower.info";
            type: TEXTBLOCK;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 200 200 200 255;
               min: 105 50;
               max: 105 50;
               align: 0.0 0.0;
               rel1.offset: 45 15;
               rel1.to: "side_bar";
               rel2.to: "side_bar";
               text.style: "ede_style";
            }
         }

         /* Tower upgrade panel */
         part { name: "tower.upgrade.text";
            type: TEXT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 200 200 200 255;
               max: 200 15;
               align: 0.0 0.0;
               rel1.offset: 0 90;
               rel1.to: "side_bar";
               rel2.to: "side_bar";
               text {
                  text: "Upgrades";
                  font: UI_FONTUI;
                  size: 14;
               }
            }
         }

#define UPGRADE_BUTTON(NUM) \
         part { name: "upgrade."NUM".clip"; \
            type: RECT; \
            description { state: "default" 0.0; \
               color: 255 255 255 255; \
               rel1.to: "side_bar"; \
               rel2.to: "side_bar"; \
               rel1.offset: 0 (110 + NUM * 45); \
               max: 155 40; \
               align: 0.0 0.0; \
            } \
            description { state: "hidden" 0.0; \
               inherit: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "upgrade."NUM".name"; \
            type: TEXT; \
            mouse_events:  0; \
            clip_to: "upgrade."NUM".clip"; \
            description { state: "default" 0.0; \
               color: 0 0 200 255; \
               rel1.offset: 35 0; \
               rel1.to: "upgrade."NUM".clip"; \
               rel2.to: "upgrade."NUM".clip"; \
               text { \
                  text: "CIAO"; \
                  font: UI_FONTUI; \
                  size: 14; \
                  align: 0.0 0.0; \
               } \
            } \
         } \
         part { name: "upgrade."NUM".desc"; \
            type: TEXT; \
            mouse_events:  0; \
            clip_to: "upgrade."NUM".clip"; \
            description { state: "default" 0.0; \
               color: 0 0 200 255; \
               rel1.offset: 35 20; \
               rel1.to: "upgrade."NUM".clip"; \
               rel2.to: "upgrade."NUM".clip"; \
               text { \
                  text: ""; \
                  font: UI_FONTUI; \
                  size: 12; \
                  align: 0.0 0.0; \
               } \
            } \
         } \
         part { name: "upgrade."NUM".icon"; \
            type: SWALLOW; \
            mouse_events:  0; \
            clip_to: "upgrade."NUM".clip"; \
            description { state : "default" 0.0; \
               max: 30 30; \
               align: 0.0 0.5; \
               rel1.to: "upgrade."NUM".clip"; \
               rel2.to: "upgrade."NUM".clip"; \
            } \
         } \
         part { name: "upgrade."NUM".button"; \
            type: RECT; \
            mouse_events:  1; \
            clip_to: "upgrade."NUM".clip"; \
            description { state: "default" 0.0; \
               color: 200 200 0 255; \
               max: 40 30; \
               align: 1.0 0.5; \
               rel1.to: "upgrade."NUM".clip"; \
               rel2.to: "upgrade."NUM".clip"; \
            } \
            description { state: "down" 0.0; \
               inherit: "default" 0.0; \
               color: 0 200 200 255; \
            } \
         } \
         part { name: "upgrade."NUM".cost"; \
            type: TEXT; \
            mouse_events:  0; \
            clip_to: "upgrade."NUM".clip"; \
            description { state: "default" 0.0; \
               color: 0 0 0 255; \
               rel1.to: "upgrade."NUM".button"; \
               rel2.to: "upgrade."NUM".button"; \
               text { \
                  text: "999"; \
                  font: UI_FONTUI; \
                  size: 12; \
               } \
            } \
         } \
         
         UPGRADE_BUTTON(0)
         UPGRADE_BUTTON(1)
         UPGRADE_BUTTON(2)
         UPGRADE_BUTTON(3)
         UPGRADE_BUTTON(4)
         UPGRADE_BUTTON(5)
         
         /* Wave controls */
         part { name: "waves.bg";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 20 200 0 40;
               rel1.offset: 12 440;
               rel2.relative: 0.0 1.0;
               rel2.offset: 168 -65;
            }
         }
         part { name: "waves.title";
            type: TEXT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 200 200 200 255;
               rel1.to: "waves.bg";
               rel2.to: "waves.bg";
               text {
                  font: UI_FONT_BOLD;
                  size: 14;
                  align: 0.5 0.0;
               }
            }
         }
         part { name: "wave.next.text";
            type: TEXT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 200 200 200 255;
               rel1.to: "waves.bg";
               rel2.to: "waves.bg";
               text {
                  font: UI_FONT;
                  size: 12;
                  align: 0.5 0.3;
               }
            }
         }
         part { name: "wave.button";
            type: RECT;
            mouse_events: 1;
            description { state: "default" 0.0;
               min: 100 20;
               max: 100 20;
               align: 0.5 0.8;
               color: 200 200 200 255;
               rel1.to: "waves.bg";
               rel2.to: "waves.bg";
            }
            description { state: "over" 0.0;
               inherit: "default" 0.0;
               color: 0 0 200 255;
            }
            description { state: "down" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 255;
            }
         }
         part { name: "wave.button.text";
            type: TEXT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 0 0 0 255;
               rel1.to: "wave.button";
               rel2.to: "wave.button";
               text {
                  text: "SEND";
                  font: UI_FONT;
                  size: 12;
                  //~ align: 0.5 0.3;
               }
            }
         }
         /* stage clipper */
         part { name: "stage.clipper";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1.offset: 180 60;
               rel2.offset: -11 -61;
            }
         }

         /* Debug info panel */
         part { name: "debug.panel";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 20 20 20 255;
               rel1.offset: -176 55;
               rel2.relative: 0.0 0.0;
               rel2.offset: -1 450;

            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1.offset: 0 55;
               rel2.offset: 175 450;
            }
         }
         part { name: "debug.panel.text";
            type: TEXTBLOCK;
            mouse_events:  0;
            description { state: "default" 0.0;
               rel1.to: "debug.panel";
               rel1.offset: 4 4;
               rel2.to: "debug.panel";
               rel2.offset: -4 -4;
               text {
                  text: "suka";
                  style: "ede_style";
               }

            }
         }
      }
      programs {
         /* debug panel */
         program {
            signal: "debug,panel,show";
            source: "";
            action: STATE_SET "visible" 0.0;
            transition: LINEAR 0.4;
            target: "debug.panel";
         }
         program {
            signal: "debug,panel,hide";
            source: "";
            action: STATE_SET "default" 0.0;
            transition: LINEAR 0.4;
            target: "debug.panel";
         }
         /* add buttons */
         program {
            signal: "mouse,down,1";
            source: "btn_tower_add_normal";
            action: SIGNAL_EMIT "tower,add" "normal";
         }
         program {
            signal: "mouse,down,1";
            source: "btn_tower_add_ghost";
            action: SIGNAL_EMIT "tower,add" "ghost";
         }
         program {
            signal: "mouse,down,1";
            source: "btn_tower_add_powerup";
            action: SIGNAL_EMIT "tower,add" "powerup";
         }
         program {
            signal: "mouse,down,1";
            source: "btn_tower_add_slowdown";
            action: SIGNAL_EMIT "tower,add" "slowdown";
         }
         /* upgrades */
#define UPGRADE_BUTTON_PROGS(NUM) \
         program { \
            signal: "mouse,down,1"; \
            source: "upgrade."NUM".button"; \
            action: STATE_SET "down" 0.0; \
            target: "upgrade."NUM".button"; \
         } \
         program { \
            signal: "mouse,up,1"; \
            source: "upgrade."NUM".button"; \
            action: STATE_SET "default" 0.0; \
            target: "upgrade."NUM".button"; \
            after: "upgrade."NUM".button.signal"; \
         } \
         program { \
            name: "upgrade."NUM".button.signal"; \
            action: SIGNAL_EMIT "upgrade,pressed" NUM; \
         } \
         program { \
            signal: "upgrade,show"; \
            source: NUM; \
            action: STATE_SET "default" 0.0; \
            target: "upgrade."NUM".clip"; \
         } \
         
         UPGRADE_BUTTON_PROGS(0)
         UPGRADE_BUTTON_PROGS(1)
         UPGRADE_BUTTON_PROGS(2)
         UPGRADE_BUTTON_PROGS(3)
         UPGRADE_BUTTON_PROGS(4)
         UPGRADE_BUTTON_PROGS(5)

         program {
            signal: "upgrade,hide,all";
            action: STATE_SET "hidden" 0.0;
            target: "upgrade.0.clip";
            target: "upgrade.1.clip";
            target: "upgrade.2.clip";
            target: "upgrade.3.clip";
            target: "upgrade.4.clip";
            target: "upgrade.5.clip";
         }
         /* waves */
         program {
            signal: "mouse,in";
            source: "wave.button";
            action: STATE_SET "over" 0.0;
            target: "wave.button";
         }
         program {
            signal: "mouse,out";
            source: "wave.button";
            action: STATE_SET "default" 0.0;
            target: "wave.button";
         }
         program {
            signal: "mouse,down,1";
            source: "wave.button";
            action: STATE_SET "down" 0.0;
            target: "wave.button";
         }
         program {
            signal: "mouse,up,1";
            source: "wave.button";
            action: STATE_SET "over" 0.0;
            target: "wave.button";
            after: "next_wave_emit";
         }
         program {
            name: "next_wave_emit";
            action: SIGNAL_EMIT "send,next,wave" "";
         }
      }
   }
/******************************************************************************/
   group { name: "ede/checkboard";
      min: 50 50;
      parts {
         /* checkboard  */
         part { name: "checkboard";
            type: IMAGE;
            mouse_events:  1;
            description { state: "default" 0.0;
               image.normal: "checkboard.png";
               fill {
                  smooth: 0;
                  size.relative: 0.0 0.0;
                  size.offset: 50 50;
               }
            }
         }
      }
   }
/******************************************************************************/
   group { name: "ede/selection";
      min: 25 25;
      parts {
         /* color */
         part { name: "color";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 0 200 0 200;
            }
            description { state: "wrong" 0.0;
               color: 200 0 0 200;
            }
            description { state: "blocking" 0.0;
               color: 0 0 0 200;
            }
            description { state: "tower" 0.0;
               color: 255 255 255 200;
            }
            description { state: "tower" 1.0;
               color: 255 255 255 0;
            }
         }
      }
      programs {
         program {
            signal: "set,free";
            source: "";
            action: STATE_SET "default" 0.0;
            target: "color";
         }
         program {
            signal: "set,wrong";
            source: "";
            action: STATE_SET "wrong" 0.0;
            target: "color";
         }
         program {
            signal: "set,blocking";
            source: "";
            action: STATE_SET "blocking" 0.0;
            target: "color";
         }
         program {
            signal: "set,tower";
            source: "";
            action: STATE_SET "tower" 1.0;
            target: "color";
            after: "blink_selection1";
         }
         program {
            name: "blink_selection1";
            action: STATE_SET "tower" 0.0;
            transition: SINUSOIDAL 1.0;
            target: "color";
            after: "blink_selection2";
         }
         program {
            name: "blink_selection2";
            action: STATE_SET "tower" 1.0;
            transition: SINUSOIDAL 1.0;
            target: "color";
            after: "blink_selection1";
         }
      }
   }
/******************************************************************************/
   group { name: "ede/enemy_start";
      min: 25 25;
      parts {
         /* start */
         part { name: "start";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 0 200 0 200;
            }
         }
      }
   }
   group { name: "ede/enemy_end";
      min: 25 25;
      parts {
         /* end */
         part { name: "end";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 200 0 0 200;
            }
         }
      }
   }
/******************************************************************************/
   group { name: "ede/cell_overlay";
      min: 25 25;
      parts {
         /* image */
         part { name: "image";
            type: IMAGE;
            mouse_events:  0;
            description { state: "default" 0.0;
            }
            description { state: "wall" 0.0;
               image.normal: "overlay_wall.png";
            }
         }
         /* color */
         part { name: "color";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
            description { state: "red" 0.0;
               color: 200 0 0 200;
            }
            description { state: "green" 0.0;
               color: 0 200 0 200;
            }
            description { state: "blue" 0.0;
               color: 0 0 200 200;
            }
         }
         /* border */
         part { name: "border";
            type: IMAGE;
            mouse_events:  0;
            description { state: "default" 0.0;
            }
            description { state: "red" 0.0;
               image.normal: "overlay_red.png";
            }
            description { state: "green" 0.0;
               image.normal: "overlay_green.png";
            }
            description { state: "blue" 0.0;
               image.normal: "overlay_blue.png";
            }
         }
         /* label1 */
         part { name: "label1";
            type: TEXT;
            description { state: "deafault" 0.0;
               text {
                  font: "Sans";
                  size: 8;
                  align: 0.1 0.1;
               }
            }
         }
         /* label2 */
         part { name: "label2";
            type: TEXT;
            description { state: "deafault" 0.0;
               text {
                  font: "Sans";
                  size: 8;
                  align: 0.1 1.0;
               }
            }
         }
         /* label3 */
         part { name: "label3";
            type: TEXT;
            description { state: "deafault" 0.0;
               text {
                  font: "Sans";
                  size: 8;
                  align: 0.9 0.5;
               }
            }
         }
         /* Direction */
         part { name: "direction";
            type: IMAGE;
            mouse_events:  0;
            description { state: "default" 0.0;
            }
            description { state: "visible" 0.0;
               image.normal: "overlay_0.png";
            }
            description { state: "visible" 0.1;
               image.normal: "overlay_1.png";
            }
            description { state: "visible" 0.2;
               image.normal: "overlay_2.png";
            }
            description { state: "visible" 0.3;
               image.normal: "overlay_3.png";
            }
            description { state: "visible" 0.4;
               image.normal: "overlay_4.png";
            }
            description { state: "visible" 0.5;
               image.normal: "overlay_5.png";
            }
            description { state: "visible" 0.6;
               image.normal: "overlay_6.png";
            }
            description { state: "visible" 0.7;
               image.normal: "overlay_7.png";
            }
         }
      }
      programs {
         program {
            signal: "overlay,set,none";
            source: "ede";
            action: STATE_SET "default" 0.0;
            target: "image";
            target: "color";
            target: "border";
            target: "direction";
         }
         /* Overlay borders */
         program {
            signal: "overlay,border,set,red";
            source: "ede";
            action: STATE_SET "red" 0.0;
            target: "border";
         }
         program {
            signal: "overlay,border,set,green";
            source: "ede";
            action: STATE_SET "green" 0.0;
            target: "border";
         }
         program {
            signal: "overlay,border,set,blue";
            source: "ede";
            action: STATE_SET "blue" 0.0;
            target: "border";
         }
         /* Overlay images */
         program {
            signal: "overlay,image,set,wall";
            source: "ede";
            action: STATE_SET "wall" 0.0;
            target: "image";
         }
         /* Overlay colors */
         program {
            signal: "overlay,color,set,red";
            source: "ede";
            action: STATE_SET "red" 0.0;
            target: "color";
         }
         program {
            signal: "overlay,color,set,green";
            source: "ede";
            action: STATE_SET "green" 0.0;
            target: "color";
         }
         program {
            signal: "overlay,color,set,blue";
            source: "ede";
            action: STATE_SET "blue" 0.0;
            target: "color";
         }
         /* Overlay directions */
         program {
            signal: "overlay,direction,set,0";
            source: "ede";
            action: STATE_SET "visible" 0.0;
            target: "direction";
         }
         program {
            signal: "overlay,direction,set,1";
            source: "ede";
            action: STATE_SET "visible" 0.1;
            target: "direction";
         }
         program {
            signal: "overlay,direction,set,2";
            source: "ede";
            action: STATE_SET "visible" 0.2;
            target: "direction";
         }
         program {
            signal: "overlay,direction,set,3";
            source: "ede";
            action: STATE_SET "visible" 0.3;
            target: "direction";
         }
         program {
            signal: "overlay,direction,set,4";
            source: "ede";
            action: STATE_SET "visible" 0.4;
            target: "direction";
         }
         program {
            signal: "overlay,direction,set,5";
            source: "ede";
            action: STATE_SET "visible" 0.5;
            target: "direction";
         }
         program {
            signal: "overlay,direction,set,6";
            source: "ede";
            action: STATE_SET "visible" 0.6;
            target: "direction";
         }
         program {
            signal: "overlay,direction,set,7";
            source: "ede";
            action: STATE_SET "visible" 0.7;
            target: "direction";
         }
      }
   }

/******************************************************************************/
   group { name: "ede/menu";
      parts {
         /* main menu */
         part { name: "menu.clip";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 255 255 255 200;
               //~ rel1.offset: 220 90;
               //~ rel2.offset: -30 -90;
            }
         }
         part { name: "menu.bg";
            type: RECT;
            mouse_events:  0;
            clip_to: "menu.clip";
            description { state: "default" 0.0;
               color: 66 66 150 255;
               rel1.to: "menu.clip";
               rel2.to: "menu.clip";
            }
         }
         part { name: "menu.title";
            type: TEXT;
            mouse_events:  0;
            clip_to: "menu.clip";
            effect: FAR_SHADOW;
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1.to: "menu.clip";
               rel2.to: "menu.clip";
               rel1.offset: 0 15;
               text {
                  text: "EDE Tower Defense";
                  font: MENU_FONT;
                  size: 24;
                  align: 0.5 0.0;
               }
            }
         }
         part { name: "menu.box";
            type: BOX;
            mouse_events: 1;
            repeat_events: 1;
            clip_to: "menu.clip";
            description { state: "default" 0.0;
               rel1.to: "menu.clip";
               rel2.to: "menu.clip";
               rel1.offset: 0 80;
               box {
                  layout: "vertical";
                  padding: 0 5;
                  align: 0.5 0.0;
                  min: 0 0;
                }
            }
         }
      }
   }
/******************************************************************************/
   group { name: "ede/menu_item";
      min: 400 50;
      parts {
         part { name: "bg";
            type: RECT;
            mouse_events:  1;
            description { state: "default" 0.0;
               color: 200 0 140 200;
            }
            description { state: "over" 0.0;
               color: 0 200 140 200;
            }
            description { state: "clicked" 0.0;
               color: 0 0 0 200;
            }
         }
         part { name: "label1.text";
            type: TEXT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1.offset: 10 0;
               text {
                  text: "Tutorial";
                  font: MENU_FONT;
                  size: 20;
                  align: 0.0 0.5;
               }
            }
         }
         part { name: "label2.text";
            type: TEXTBLOCK;
            mouse_events:  0;
            description { state: "default" 0.0;

               rel1.offset: 0 4;
               rel2.offset: -10 0;
               //~ color: 255 255 255 255;
               text {
                  text: "Tutorial";
                  //~ font: MENU_FONT;
                  //~ size: 10;
                  //~ align: 1.0 0.5;
                  style: "ede_menu_style";
               }
            }
         }
      }
      programs {
         program {
            signal: "mouse,in";
            source: "bg";
            action: STATE_SET "over" 0.0;
            transition: ACCELERATE 0.2;
            target: "bg";
         }
         program {
            signal: "mouse,out";
            source: "bg";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.2;
            target: "bg";
         }
         program {
            signal: "mouse,down,1";
            source: "bg";
            action: SIGNAL_EMIT "item,selected" "";
            after: "menu_clicked";
         }
         program { name: "menu_clicked";
            action: STATE_SET "clicked" 0.0;
            target: "bg";
         }
         program {
            signal: "mouse,up,1";
            source: "bg";
            action: STATE_SET "over" 0.0;
            target: "bg";
         }
      }
   }
   /******************************************************************************/
   /* level selector menu */
   group { name: "ede/levelselector";
      parts {
         part { name: "level_selector.clip";
            type: RECT;
            mouse_events:  0;
            description { state: "default" 0.0;
               color: 255 255 255 255;
            }
         }
         part { name: "level_selector.bg";
            type: RECT;
            mouse_events:  0;
            clip_to: "level_selector.clip";
            description { state: "default" 0.0;
               color: 66 66 150 255;
               rel1.to: "level_selector.clip";
               rel2.to: "level_selector.clip";
            }
         }
         part { name: "level_selector.title";
            type: TEXT;
            mouse_events:  0;
            clip_to: "level_selector.clip";
            effect: FAR_SHADOW;
            description { state: "default" 0.0;
               color: 255 255 255 255;
               rel1.to: "level_selector.clip";
               rel2.to: "level_selector.clip";
               rel1.offset: 0 15;
               text {
                  text: "Select Level";
                  font: MENU_FONT;
                  size: 24;
                  align: 0.5 0.0;
               }
            }
         }
         part { name: "level_selector.box";
            type: BOX;
            mouse_events: 1;
            repeat_events: 1;
            clip_to: "level_selector.clip";
            description { state: "default" 0.0;
               rel1.to: "level_selector.clip";
               rel2.to: "level_selector.clip";
               rel1.offset: 0 80;
               box {
                  layout: "vertical";
                  padding: 0 5;
                  align: 0.5 0.0;
                  min: 0 0;
                }
            }
         }
      }
   }
   /******************************************************************************/
}
